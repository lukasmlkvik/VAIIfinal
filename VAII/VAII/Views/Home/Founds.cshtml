@model FoundsData
@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@{
    ViewData["Title"] = "Found";
}

<input class="form-control margin-10" type="text" id="search" placeholder="Search" aria-label="Search" value="@Model.Search">

<script>
    var search = document.getElementById("search");
    search.onchange = (e) => {
        document.location.search = "?page=1&count=@Model.Count&search=" + e.target.value;
    }
    function CallPut(s){
        console.log(s)
        var xhttp = new XMLHttpRequest();
        xhttp.open("PUT", "https://localhost:44371/api/UserFounds/" + s);
        xhttp.send();
    }
</script>
<div class="fixed-table-pagination" style="">
    <div class="float-left-min780 pagination-detail">
        <span class="pagination-info none-991">
            Showing @((Model.Page - 1) * Model.Count + 1) to @((Model.Page) * Model.Count) of @Model.MaxCount rows
        </span><span class="page-list">
            <span class="btn-group dropdown dropup">
                <button class="btn btn-secondary dropdown-toggle" type="button" data-toggle="dropdown">
                    <span class="page-size">
                        @Model.Count
                    </span>
                    <span class="caret"></span>
                </button>
                <div class="dropdown-menu"><a class="dropdown-item active" href="?count=10&search=@Model.Search">10</a><a class="dropdown-item " href="?count=25&search=@Model.Search">25</a><a class="dropdown-item " href="?count=50&search=@Model.Search">50</a><a class="dropdown-item " href="?count=100&search=@Model.Search">100</a><a class="dropdown-item " href="?count=-1&search=@Model.Search">All</a></div>
            </span> rows per page
        </span>
    </div>
    <div class="float-right-min780 pagination">
        <ul class="pagination">

            @if (1 != Model.Page)
            {

            <li class="page-item page-pre"><a class="page-link" aria-label="previous page" href="?page=@(Model.Page - 1)&count=@Model.Count&search=@Model.Search">‹</a></li>
            }


            @if (2 < Model.Page)
            {
            <li class="page-item"><a class="page-link" aria-label="to page 1" href="?page=1&count=@Model.Count&search=@Model.Search">1</a></li>
            }
            @if (3 < Model.Page)
            {
            <li class="page-item page-first-separator disabled"><a class="page-link" href="#">...</a></li>
            }

            @if (1 != Model.Page)
            {

            <li class="page-item"><a class="page-link" aria-label="to page @(Model.Page - 1)" href="?page=@(Model.Page - 1)&count=@Model.Count&search=@Model.Search">@(Model.Page - 1)</a></li>
            }
            <li class="page-item active"><a class="page-link" aria-label="to page @Model.Page" href="?page=@Model.Page&count=@Model.Count&search=@Model.Search">@Model.Page</a></li>
            @if (Model.MaxPage != Model.Page)
            {
            <li class="page-item"><a class="page-link" aria-label="to page @(Model.Page + 1)" href="?page=@(Model.Page + 1)&count=@Model.Count&search=@Model.Search">@(Model.Page + 1)</a></li>
            }

            @if (Model.MaxPage > Model.Page + 2)
            {
            <li class="page-item page-last-separator disabled"><a class="page-link" href="#">...</a></li>
            }
            @if (Model.MaxPage > Model.Page + 1)
            {
            <li class="page-item"><a class="page-link" aria-label="to page @Model.MaxPage" href="?page=@Model.MaxPage&count=@Model.Count&search=@Model.Search">@Model.MaxPage</a></li>
            }

            @if (Model.MaxPage != Model.Page)
            {
            <li class="page-item page-next"><a class="page-link" aria-label="next page" href="?page=@(Model.Page + 1)&count=@Model.Count&search=@Model.Search">›</a></li>
            }

        </ul>
    </div>
</div>

<table id="example" class="table table-striped table-bordered" style="width:100%">
    <thead>
        <tr>
            <th>Logo</th>
            <th>Name</th>
            <th>Description</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (FoundModel f in Model.List)
        {
        <tr>
            <td class="col-logo">
                <img src="@f.logo" />
            </td>

            <td class="clickable" onclick="NewPage('https://localhost:44371/Home/Found?s=@f.symbol')">
                <h4>
                        @f.name
                </h4>
            </td>

            <td>
                @f.description
            </td>
            <td class="col-btn">
                @if (SignInManager.IsSignedIn(User))
                {
                    <button class="btn btn-success" onclick="CallPut('@f.symbol')">Add</button>
                }
                else
                {
                    <button class="btn btn-success disabled">Add</button>
                }
            </td>
        </tr>
        }

    </tbody>
</table>
